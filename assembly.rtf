
	ORG 100
	LDA INPR

LOOP,	BSA CHECK		/Checks if BCD0 and BCD1 are greater than or equal to 5.

	BSA SHIFT_BCD2		/Shifts BCD2 to the left.
		
	BSA FIRST_BIT_BCD1	/If the leftmost bit of BCD1 is 1, add 1 to BCD2, shift BCD1 to the left.
	LDA TEMP
	SPA
	BSA ADDITION_BCD2
	BSA SHIFT_BCD1	

	BSA FIRST_BIT_BCD0	/If the leftmost bit of BCD0 is 1, add 1 to BCD1, shift BCD0 to the left.
	LDA TEMP
	SPA
	BSA ADDITION_BCD1
	BSA SHIFT_BCD0	

	BSA FIRST_BIT_INPR	/If the leftmost bit of INPR is 1, add 1 to BCD0, shift INPR to the left.
	LDA TEMP
	SPA
	BSA ADDITION_BCD0
	BSA SHIFT_INPR	
	
	ISZ COUNT		/Finish if Count equals zero. If not, go back to the loop.
	BUN LOOP
	HLT



/Subroutines that temporarily store the value of BCDs and INPR in Temp and shift temp to the left until they reach the first bit.
FIRST_BIT_BCD1,	HEX 0
	LDA BCD1
	STA TEMP 
	CLE 	
	SPA 	
	CME 	
	CIL
	CIL
	CIL
	CIL
	CIL
	CIL	
	CIL
	CIL
	CIL
	CIL
	CIL
	CIL
	STA TEMP
	BUN FIRST_BIT_BCD1 I


FIRST_BIT_BCD0,	HEX 0
	LDA BCD0
	STA TEMP 
	CLE 	
	SPA 	
	CME 	
	CIL
	CIL
	CIL
	CIL
	CIL
	CIL	
	CIL
	CIL
	CIL
	CIL
	CIL
	CIL
	STA TEMP
	BUN FIRST_BIT_BCD0 I


FIRST_BIT_INPR,	HEX 0
	LDA INPR
	STA TEMP 
	CLE 	
	SPA 	
	CME 	
	CIL
	CIL
	CIL
	CIL
	CIL
	CIL	
	CIL
	CIL
	STA TEMP
	BUN FIRST_BIT_INPR I



/Subroutines that shift to left BCDs and INPR.
SHIFT_BCD2,	HEX 0
	LDA BCD2 
	CLE 	
	SPA 	
	CME 	
	CIL 	
	AND RESET
	STA BCD2
	BUN SHIFT_BCD2 I


SHIFT_BCD1,	HEX 0
	LDA BCD1 
	CLE 	
	SPA 	
	CME 	
	CIL 	
	AND RESET
	STA BCD1
	BUN SHIFT_BCD1 I


SHIFT_BCD0,	HEX 0
	LDA BCD0
	CLE
	SPA
	CME
	CIL	
	AND RESET
	STA BCD0
	BUN SHIFT_BCD0 I


SHIFT_INPR,	HEX 0
	LDA INPR
    	CLE
    	SPA
	CME
    	CIL
    	STA INPR
	BUN SHIFT_INPR I



/Subroutines to add 1 to the next four-bit group if the first bit of the value to be shifted is equal to 1
ADDITION_BCD2,	HEX 0
	LDA BCD2	
	ADD ONE
	STA BCD2
	BUN ADDITION_BCD2 I


ADDITION_BCD1,	HEX 0
	LDA BCD1
	ADD ONE
	STA BCD1
	BUN ADDITION_BCD1 I


ADDITION_BCD0,	HEX 0
	LDA BCD0	
	ADD ONE
	STA BCD0
	BUN ADDITION_BCD0 I



/Subroutine that checks if BCD0 and BCD1 are greater than or equal to 5
CHECK, HEX 0
	LDA BCD0 	
	ADD FIVE
	STA TEMP 
	SNA
	BSA ADD3_BCD0

	LDA BCD1
	ADD FIVE
	STA TEMP 
	SNA
	BSA ADD3_BCD1 
	BUN CHECK I



/Subroutines that add 3 if BCDs are greater than or equal to 5
ADD3_BCD0,	HEX 0
	LDA BCD0
	ADD THREE
	STA BCD0
	BUN ADD3_BCD0 I


ADD3_BCD1,	HEX 0
	LDA BCD1
	ADD THREE
	STA BCD1
	BUN ADD3_BCD1 I

	HLT




BCD0,	HEX 0	/First four bit place that will get the shifted value of INPR.
BCD1,	HEX 0	/Second four bit place that will get the shifted value of INPR.
BCD2,	HEX 0	/Third four bit place that will get the shifted value of INPR.
INPR,	HEX AA
ONE,	DEC 1	/The value that will be added if the shifted value is one.
FIVE,	DEC -5	/It will be used to check if the binary value that is stored in BCD subroutine is bigger or equal to 5
THREE,	DEC 3	/Will be used for ADD3 operation.
TEMP,	HEX 0	/Will temporariliy store the result.
COUNT,	DEC -8	/Counter that will be incremented after each loop.
RESET, HEX E	/For the rightmost bit after shift to be zero.

	
